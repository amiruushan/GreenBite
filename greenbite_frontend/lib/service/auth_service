import 'package:shared_preferences/shared_preferences.dart';

class AuthService {
  static const String _tokenKey = 'auth_token';
  static String? _cachedToken; // In-memory cache

  // Save token and cache it
  static Future<void> saveToken(String token) async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    await prefs.setString(_tokenKey, token);
    _cachedToken = token; // Store in cache
  }

  // Get token: First check cache, if not found, load from SharedPreferences
  static Future<String?> getToken() async {
    if (_cachedToken != null) {
      return _cachedToken; // Return cached token if available
    }

    SharedPreferences prefs = await SharedPreferences.getInstance();
    _cachedToken = prefs.getString(_tokenKey); // Load from storage
    return _cachedToken;
  }

  // Remove token (for logout)
  static Future<void> removeToken() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    await prefs.remove(_tokenKey);
    _cachedToken = null; // Clear cache
  }
}